(()=>{"use strict";class t{constructor(t,e){this.board=t,this.list=this.board.querySelector(".todo-list"),this.task=null,this.inputValue=e,this.createdTask=null,this.closeCross=null}create(){this.createdTask=document.createElement("li"),this.createdTask.className="todo-task",this.createdTask.innerHTML=`<span>${this.inputValue}</span>\n    <div class="close">\n    <div class="close-task">+</div>\n    </div>`}insert(){this.list.appendChild(this.createdTask)}addCloseButton(){this.task=document.querySelectorAll(".todo-task");for(let t=0;t<this.task.length;t+=1)this.closeCross=this.task[t].querySelector(".close-task"),this.task[t].addEventListener("mouseover",(()=>{this.closeCross.style.display="block",this.task[t].querySelector(".close").addEventListener("click",(()=>{this.task[t].remove()}))})),this.task[t].addEventListener("mouseout",(()=>{this.closeCross.style.display="none"}))}}const e=new class{constructor(){this.createdForm=null,this.todoListArray=[],this.wipListArray=[],this.doneListArray=[]}activateAddButtons(){const t=document.querySelectorAll(".add-task");for(let e=0;e<t.length;e+=1)t[e].addEventListener("click",(s=>{s.preventDefault();const o=t[e].closest(".tasker");this.createForm(o)}))}createForm(t){this.createdForm=document.createElement("form"),this.createdForm.className="task-input-form",this.createdForm.innerHTML='<textarea class="task-input" name="task-input" placeholder="Type your task here..." rows="4" wrap="soft" required></textarea>\n        <div class="form-controls">\n          <input class="task-btn" type="submit" value="Submit">\n          <div class="close-input">+</div>\n      </div>',t.appendChild(this.createdForm),this.controlForm(t,this.createdForm)}controlForm(e,s){const o=s.querySelector(".task-btn"),r=s.querySelector(".task-input"),i=s.querySelector(".close-input");o.addEventListener("click",(o=>{if(o.preventDefault(),r.value){const o=new t(e,r.value);o.create(),o.insert(),o.addCloseButton(),e.removeChild(s)}})),i.addEventListener("click",(t=>{t.preventDefault(),e.removeChild(s)}))}mapingForSave(){const t=[...document.querySelector("#todo").querySelectorAll("li.todo-task")],e=[...document.querySelector("#wip").querySelectorAll("li.todo-task")],s=[...document.querySelector("#done").querySelectorAll("li.todo-task")];for(const e of t)this.todoListArray.push(e.firstChild.innerText);for(const t of e)this.wipListArray.push(t.firstChild.innerText);for(const t of s)this.doneListArray.push(t.firstChild.innerText);localStorage.clear(),localStorage.setItem("todo",JSON.stringify(this.todoListArray)),localStorage.setItem("wip",JSON.stringify(this.wipListArray)),localStorage.setItem("done",JSON.stringify(this.doneListArray))}solveBoards(){const e=JSON.parse(localStorage.getItem("todo")),s=JSON.parse(localStorage.getItem("wip")),o=JSON.parse(localStorage.getItem("done")),r=document.querySelector("#todo"),i=document.querySelector("#wip"),l=document.querySelector("#done");for(const s of e){const e=new t(r,s);e.create(),e.insert(),e.addCloseButton()}for(const e of s){const s=new t(i,e);s.create(),s.insert(),s.addCloseButton()}for(const e of o){const s=new t(l,e);s.create(),s.insert(),s.addCloseButton()}}},s=new class{constructor(){this.draggedEl=null,this.ghostEl=null}init(){document.addEventListener("mousedown",this.down),document.addEventListener("mousemove",this.move),document.addEventListener("mouseup",this.up)}down(t){t.target.classList.contains("todo-task")&&(document.body.style.cursor="grabbing",this.draggedEl=t.target,this.ghostEl=this.draggedEl.cloneNode(!0),this.draggedEl.classList.add("selected"),this.ghostEl.classList.add("dragged"),document.body.appendChild(this.ghostEl))}move(t){if(t.preventDefault(),!this.draggedEl)return;this.ghostEl.style.left=t.pageX-this.ghostEl.offsetWidth/2+"px",this.ghostEl.style.top=t.pageY-this.ghostEl.offsetHeight/2+"px",document.querySelector(".ghosted")&&document.querySelector(".ghosted").remove();const e=document.elementFromPoint(t.clientX,t.clientY);if(e.classList.contains("selected"))return;const s=document.createElement("li");if(s.style.height=`${this.draggedEl.offsetHeight}px`,s.className="todo-task ghosted",e.classList.contains("todo-task")||!e.closest(".todo-list")){if(e.classList.contains("todo-task")){const{top:o}=e.getBoundingClientRect();t.pageY>window.scrollY+o+e.offsetHeight/2?e.closest(".todo-list").insertBefore(s,e.nextElementSibling):e.closest(".todo-list").insertBefore(s,e)}e.classList.contains("todo-task")||e.closest(".todo-list")||!e.closest(".tasker")||e.closest(".tasker").querySelector(".todo-list").appendChild(s)}}up(t){document.removeEventListener("mousemove",this.move),document.removeEventListener("mouseup",this.up);const e=document.elementFromPoint(t.clientX,t.clientY);if(e.classList.contains("todo-task")){const{top:s}=e.getBoundingClientRect();t.pageY>window.scrollY+s+e.offsetHeight/2?e.closest(".todo-list").insertBefore(this.ghostEl,e.nextElementSibling):e.closest(".todo-list").insertBefore(this.ghostEl,e)}this.ghostEl.classList.remove("dragged"),this.task=document.querySelectorAll(".todo-task");for(let t=0;t<this.task.length;t+=1){const e=this.task[t].querySelector(".close-task");this.task[t].addEventListener("mouseover",(()=>{e.style.display="block",this.task[t].querySelector(".close").addEventListener("click",(()=>{this.task[t].remove()}))})),this.task[t].addEventListener("mouseout",(()=>{e.style.display="none"}))}document.querySelector(".selected").remove(),document.querySelector(".ghosted").remove(),this.ghostEl=null,this.draggedEl=null,document.body.style.cursor="auto"}};localStorage.length>0&&e.solveBoards(),e.activateAddButtons(),s.init(),window.addEventListener("beforeunload",(()=>{e.mapingForSave()}))})();